pipeline{
    agent {
    docker {
        image 'lakshayaswal/maven-java17-docker:v1'
        args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
        //args '--user root -v /var/run/docker.sock:/var/run/docker.sock -v $WORKSPACE:$WORKSPACE -w $WORKSPACE'
    }
}
    stages{
        stage('Checkout'){
            steps{
                //sh 'echo passed'
                checkout scm
                //git branch: 'main', url: 'https://github.com/Lakshay-Aswal/Ulitimate_CICD_Pipeline_Project.git'
            }
        }
        stage('Build & Test'){
            steps{
                sh 'ls -ltr'
                // build the project and create a JAR file
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
            }
        }
        stage('Static Code Analysis'){
            environment{
                SONAR_URL = 'http://18.60.43.146:9000'
            }
            steps{
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]){
                    sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
                }
            }
        }
        stage('Build and Push Docker Image'){
            environment{
                DOCKER_IMAGE = "lakshayaswal/ultimate-cicd:${BUILD_NUMBER}"
                // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
                DOCKERHUB_CREDENTIALS = credentials('docker-cred')
            }
            steps{
                script{
                    sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', 'docker-cred'){
                        dockerImage.push()
                    }
                }
            }
        
        }
        stage('Update Deployment File'){
            environment{
                GIT_REPO_NAME = 'Ulitimate_CICD_Pipeline_Project'
                GIT_USER_NAME = 'Lakshay-Aswal'
            }
            steps{
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git config user.email "aswallakshay02@gmail.com"
                        git config user.name "Lakshay-Aswal"
                        BUILD_NUMBER=${BUILD_NUMBER}
                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git commit -m "Update deployment image tag to ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                   
                }
            }
        }
    }  
}
